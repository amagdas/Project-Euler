(*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*)
open System.Numerics

//generate infinite Fibonacci sequence
let fibSeq startValues  = Seq.unfold (fun (a,b) -> Some(a+b, (b, a+b))) startValues
let isEven (a:BigInteger):bool = BigInteger.op_Equality(BigInteger.Remainder(a, 2I), BigInteger.Zero)

let generateFibonacciUpTo (max:BigInteger) :BigInteger =
    fibSeq (0I, 1I)        
    |> Seq.filter isEven
    |> Seq.takeWhile (fun x -> x < max)
    |> Seq.reduce(+)

generateFibonacciUpTo 4000000I |> printfn "Solution for problem 2 is %A"
 